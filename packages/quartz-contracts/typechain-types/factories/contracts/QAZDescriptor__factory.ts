/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QAZDescriptor,
  QAZDescriptorInterface,
} from "../../contracts/QAZDescriptor";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "input",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "genParam",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getAccuracy",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCost",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getElement",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getLuck",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPower",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getRange",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSpeed",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSpell",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e4a806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80636500aee0116100665780636500aee014610118578063b5913c841461012b578063c75115451461013e578063c87b56dd14610151578063cc364f481461016457600080fd5b8063017fe809146100a35780633a7d22bc146100cc5780634b93f753146100df57806354f54a00146100f25780635a4dd47d14610105575b600080fd5b6100b66100b13660046108cb565b610177565b6040516100c39190610940565b60405180910390f35b6100b66100da3660046108cb565b6101a6565b6100b66100ed3660046108cb565b610231565b6100b66101003660046109c2565b610256565b6100b66101133660046108cb565b6102c4565b6100b66101263660046108cb565b6102ec565b6100b66101393660046108cb565b610318565b6100b661014c3660046108cb565b610353565b6100b661015f3660046108cb565b61037b565b6100b66101723660046108cb565b61050a565b60606101a0604051806040016040528060058152602001643837bbb2b960d91b81525083610256565b92915050565b604051630e9f48af60e21b81526004810182905260609073__$679d954aeca1a18d9c1f8db649be888aed$__90633a7d22bc906024015b60006040518083038186803b1580156101f557600080fd5b505af4158015610209573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101a09190810190610a44565b60606101a0604051806040016040528060058152602001641cdc19595960da1b815250835b60606102bd60208461026785610533565b604051602001610278929190610abb565b60408051601f198184030181529082905261029591602001610aea565b6040516020818303038152906040528051906020012060001c6102b89190610b1c565b610533565b9392505050565b60606101a06040518060400160405280600481526020016318dbdcdd60e21b81525083610256565b60606101a060405180604001604052806008815260200167616363757261637960c01b81525083610256565b604051632d644f2160e21b81526004810182905260609073__$679d954aeca1a18d9c1f8db649be888aed$__9063b5913c84906024016101dd565b60606101a0604051806040016040528060048152602001636c75636b60e01b81525083610256565b60606000604051806080016040528061039385610318565b61039c86610533565b6040516020016103ad929190610b30565b60405160208183030381529060405281526020016040518060a0016040528060758152602001610da06075913981526020016103e885610639565b815260200173__$679d954aeca1a18d9c1f8db649be888aed$__632607aafa866040518263ffffffff1660e01b815260040161042691815260200190565b60006040518083038186803b15801561043e57600080fd5b505af4158015610452573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261047a9190810190610a44565b9052604051635b4e748760e01b815290915073__$e1d8844a0810dc0e87a665b1f2b5fa7c69$__90635b4e7487906104b6908490600401610b6d565b60006040518083038186803b1580156104ce57600080fd5b505af41580156104e2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102bd9190810190610a44565b60606101a06040518060400160405280600581526020016472616e676560d81b81525083610256565b6060816105575750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610581578061056b81610bf8565b915061057a9050600a83610c13565b915061055b565b60008167ffffffffffffffff81111561059c5761059c610953565b6040519080825280601f01601f1916602001820160405280156105c6576020820181803683370190505b5090505b8415610631576105db600183610c27565b91506105e8600a86610b1c565b6105f3906030610c3e565b60f81b81838151811061060857610608610c56565b60200101906001600160f81b031916908160001a90535061062a600a86610c13565b94506105ca565b949350505050565b604080516020808201835260008252825180840190935260058352641cdc195b1b60da1b9083015260609161067a90829061067386610318565b6000610883565b90508060405160200161068d9190610c6c565b60408051601f198184030181528282019091526007825266195b195b595b9d60ca1b602083015291506106c5908290610673866101a6565b9050806040516020016106d89190610c6c565b60408051601f1981840301815282820190915260058252643837bbb2b960d91b6020830152915061071590829061070e86610177565b6001610883565b9050806040516020016107289190610c6c565b60408051601f1981840301815282820190915260058252641cdc19595960da1b6020830152915061075e90829061070e86610231565b9050806040516020016107719190610c6c565b60408051601f198184030181528282019091526008825267616363757261637960c01b602083015291506107aa90829061070e866102ec565b9050806040516020016107bd9190610c6c565b60408051601f19818403018152828201909152600582526472616e676560d81b602083015291506107f390829061070e8661050a565b9050806040516020016108069190610c6c565b60408051601f19818403018152828201909152600482526318dbdcdd60e21b6020830152915061083b90829061070e866102c4565b90508060405160200161084e9190610c6c565b60408051601f1981840301815282820190915260048252636c75636b60e01b602083015291506102bd90829061070e86610353565b606081156108b6578484846040516020016108a093929190610c91565b6040516020818303038152906040529050610631565b8484846040516020016108a093929190610d17565b6000602082840312156108dd57600080fd5b5035919050565b60005b838110156108ff5781810151838201526020016108e7565b8381111561090e576000848401525b50505050565b6000815180845261092c8160208601602086016108e4565b601f01601f19169290920160200192915050565b6020815260006102bd6020830184610914565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561099257610992610953565b604052919050565b600067ffffffffffffffff8211156109b4576109b4610953565b50601f01601f191660200190565b600080604083850312156109d557600080fd5b823567ffffffffffffffff8111156109ec57600080fd5b8301601f810185136109fd57600080fd5b8035610a10610a0b8261099a565b610969565b818152866020838501011115610a2557600080fd5b8160208401602083013760006020928201830152969401359450505050565b600060208284031215610a5657600080fd5b815167ffffffffffffffff811115610a6d57600080fd5b8201601f81018413610a7e57600080fd5b8051610a8c610a0b8261099a565b818152856020838501011115610aa157600080fd5b610ab28260208301602086016108e4565b95945050505050565b60008351610acd8184602088016108e4565b835190830190610ae18183602088016108e4565b01949350505050565b60008251610afc8184602087016108e4565b9190910192915050565b634e487b7160e01b600052601260045260246000fd5b600082610b2b57610b2b610b06565b500690565b60008351610b428184602088016108e4565b61202360f01b9083019081528351610b618160028401602088016108e4565b01600201949350505050565b602081526000825160806020840152610b8960a0840182610914565b90506020840151601f1980858403016040860152610ba78383610914565b92506040860151915080858403016060860152610bc48383610914565b9250606086015191508085840301608086015250610ab28282610914565b634e487b7160e01b600052601160045260246000fd5b6000600019821415610c0c57610c0c610be2565b5060010190565b600082610c2257610c22610b06565b500490565b600082821015610c3957610c39610be2565b500390565b60008219821115610c5157610c51610be2565b500190565b634e487b7160e01b600052603260045260246000fd5b60008251610c7e8184602087016108e4565b600b60fa1b920191825250600101919050565b60008451610ca38184602089016108e4565b6f3d913a3930b4ba2fba3cb832911d101160811b9083019081528451610cd08160108401602089016108e4565b6a01116113b30b63ab2911d160ad1b601092909101918201528351610cfc81601b8401602088016108e4565b607d60f81b601b9290910191820152601c0195945050505050565b60008451610d298184602089016108e4565b6f3d913a3930b4ba2fba3cb832911d101160811b9083019081528451610d568160108401602089016108e4565b6b1116113b30b63ab2911d101160a11b601092909101918201528351610d8381601c8401602088016108e4565b61227d60f01b601c9290910191820152601e019594505050505056fe51754172745a2069732066756c6c2d6f6e2d636861696e206d61676963207370656c6c2070726f746f636f6c2c20746861742069732067656e6572617465642072616e646f6d6c7920616e642073746f72656420776974682061747472696275746573206f6e204173746572204e6574776f726b2ea26469706673582212205e2c04535c4659c828e2cb12513cab73a23a42f962a45f34a0da1ec7dfd9688164736f6c63430008090033";

type QAZDescriptorConstructorParams =
  | [linkLibraryAddresses: QAZDescriptorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QAZDescriptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class QAZDescriptor__factory extends ContractFactory {
  constructor(...args: QAZDescriptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        QAZDescriptor__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: QAZDescriptorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$679d954aeca1a18d9c1f8db649be888aed\\$__", "g"),
      linkLibraryAddresses["contracts/libs/QAZElementer.sol:QAZElementer"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e1d8844a0810dc0e87a665b1f2b5fa7c69\\$__", "g"),
      linkLibraryAddresses["contracts/libs/NFTDescriptor.sol:NFTDescriptor"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QAZDescriptor> {
    return super.deploy(overrides || {}) as Promise<QAZDescriptor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): QAZDescriptor {
    return super.attach(address) as QAZDescriptor;
  }
  override connect(signer: Signer): QAZDescriptor__factory {
    return super.connect(signer) as QAZDescriptor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QAZDescriptorInterface {
    return new utils.Interface(_abi) as QAZDescriptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QAZDescriptor {
    return new Contract(address, _abi, signerOrProvider) as QAZDescriptor;
  }
}

export interface QAZDescriptorLibraryAddresses {
  ["contracts/libs/QAZElementer.sol:QAZElementer"]: string;
  ["contracts/libs/NFTDescriptor.sol:NFTDescriptor"]: string;
}
