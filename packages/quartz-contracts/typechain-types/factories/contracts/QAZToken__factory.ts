/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { QAZToken, QAZTokenInterface } from "../../contracts/QAZToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IQAZDescriptor",
        name: "_descriptor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectionName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectionSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "descriptor",
    outputs: [
      {
        internalType: "contract IQAZDescriptor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "last77MintedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IQAZDescriptor",
        name: "_descriptor",
        type: "address",
      },
    ],
    name: "setDescriptor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b9e38038062001b9e8339810160408190526200003491620002c4565b604080518082018252600681526528baa0b93a2d60d11b6020808301919091528251808401909352600383526228a0ad60e91b908301526001600055906200007c3362000121565b8151620000919060029060208501906200021e565b508051620000a79060039060208401906200021e565b50620000b591505062000173565b8051620000cb91600a916020909101906200021e565b50620000d66200020d565b8051620000ec91600b916020909101906200021e565b50600c80546001600160a01b0319166001600160a01b0383161790556200011762043ad042620002f6565b600d555062000359565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606002805462000184906200031c565b80601f0160208091040260200160405190810160405280929190818152602001828054620001b2906200031c565b8015620002035780601f10620001d75761010080835404028352916020019162000203565b820191906000526020600020905b815481529060010190602001808311620001e557829003601f168201915b5050505050905090565b60606003805462000184906200031c565b8280546200022c906200031c565b90600052602060002090601f0160209004810192826200025057600085556200029b565b82601f106200026b57805160ff19168380011785556200029b565b828001600101855582156200029b579182015b828111156200029b5782518255916020019190600101906200027e565b50620002a9929150620002ad565b5090565b5b80821115620002a95760008155600101620002ae565b600060208284031215620002d757600080fd5b81516001600160a01b0381168114620002ef57600080fd5b9392505050565b6000828210156200031757634e487b7160e01b600052601160045260246000fd5b500390565b600181811c908216806200033157607f821691505b602082108114156200035357634e487b7160e01b600052602260045260246000fd5b50919050565b61183580620003696000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80636352211e116100c3578063b88d4fde1161007c578063b88d4fde1461029b578063ba7d3271146102ae578063c87b56dd146102b6578063e5326ab1146102c9578063e985e9c5146102d1578063f2fde38b1461030d57600080fd5b80636352211e1461024157806370a0823114610254578063715018a6146102675780638da5cb5b1461026f57806395d89b4114610280578063a22cb4651461028857600080fd5b80631249c58b116101155780631249c58b146101e257806318160ddd146101f857806323b872dd146102005780632f39352a14610213578063303e74df1461021b57806342842e0e1461022e57600080fd5b806301b9a3971461015257806301ffc9a71461016757806306fdde031461018f578063081812fc146101a4578063095ea7b3146101cf575b600080fd5b6101656101603660046112e2565b610320565b005b61017a61017536600461131c565b610375565b60405190151581526020015b60405180910390f35b6101976103c7565b6040516101869190611391565b6101b76101b23660046113a4565b610459565b6040516001600160a01b039091168152602001610186565b6101656101dd3660046113bd565b6104ee565b6101ea610604565b604051908152602001610186565b6101ea61070c565b61016561020e3660046113e9565b61071c565b61019761074d565b600c546101b7906001600160a01b031681565b61016561023c3660046113e9565b6107db565b6101b761024f3660046113a4565b6107f6565b6101ea6102623660046112e2565b61086d565b6101656108f4565b6001546001600160a01b03166101b7565b61019761092a565b61016561029636600461142a565b610939565b6101656102a93660046114d7565b610948565b600d546101ea565b6101976102c43660046113a4565b610980565b610197610a01565b61017a6102df366004611586565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b61016561031b3660046112e2565b610a0e565b6001546001600160a01b031633146103535760405162461bcd60e51b815260040161034a906115b4565b60405180910390fd5b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b031982166380ac58cd60e01b14806103a657506001600160e01b03198216635b5e139f60e01b145b806103c157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546103d6906115e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610402906115e9565b801561044f5780601f106104245761010080835404028352916020019161044f565b820191906000526020600020905b81548152906001019060200180831161043257829003601f168201915b5050505050905090565b6000818152600460205260408120546001600160a01b03166104d25760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161034a565b506000908152600660205260409020546001600160a01b031690565b60006104f9826107f6565b9050806001600160a01b0316836001600160a01b031614156105675760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161034a565b336001600160a01b0382161480610583575061058381336102df565b6105f55760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161034a565b6105ff8383610aa9565b505050565b6000600260005414156106595760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161034a565b600260005561066b62043ad04261163a565b600d54106106b15760405162461bcd60e51b815260206004820152601360248201527226b4b73a1034b9903637b1b5b2b2103737bb9760691b604482015260640161034a565b60006106bc60095490565b905060006106c982610980565b90506106d53383610b17565b6106df8282610b31565b6106ea604d83611651565b6106f35742600d555b610701600980546001019055565b509050600160005590565b600061071760095490565b905090565b6107263382610bcb565b6107425760405162461bcd60e51b815260040161034a90611673565b6105ff838383610cc2565b600b805461075a906115e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610786906115e9565b80156107d35780601f106107a8576101008083540402835291602001916107d3565b820191906000526020600020905b8154815290600101906020018083116107b657829003601f168201915b505050505081565b6105ff83838360405180602001604052806000815250610948565b6000818152600460205260408120546001600160a01b0316806103c15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161034a565b60006001600160a01b0382166108d85760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161034a565b506001600160a01b031660009081526005602052604090205490565b6001546001600160a01b0316331461091e5760405162461bcd60e51b815260040161034a906115b4565b6109286000610e5e565b565b6060600380546103d6906115e9565b610944338383610eb0565b5050565b6109523383610bcb565b61096e5760405162461bcd60e51b815260040161034a90611673565b61097a84848484610f7f565b50505050565b600c5460405163c87b56dd60e01b8152600481018390526060916001600160a01b03169063c87b56dd9060240160006040518083038186803b1580156109c557600080fd5b505afa1580156109d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103c191908101906116c4565b600a805461075a906115e9565b6001546001600160a01b03163314610a385760405162461bcd60e51b815260040161034a906115b4565b6001600160a01b038116610a9d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161034a565b610aa681610e5e565b50565b600081815260066020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ade826107f6565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610944828260405180602001604052806000815250610fb2565b6000828152600460205260409020546001600160a01b0316610bac5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161034a565b600082815260086020908152604090912082516105ff92840190611234565b6000818152600460205260408120546001600160a01b0316610c445760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161034a565b6000610c4f836107f6565b9050806001600160a01b0316846001600160a01b03161480610c9657506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b80610cba5750836001600160a01b0316610caf84610459565b6001600160a01b0316145b949350505050565b826001600160a01b0316610cd5826107f6565b6001600160a01b031614610d395760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161034a565b6001600160a01b038216610d9b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161034a565b610da6600082610aa9565b6001600160a01b0383166000908152600560205260408120805460019290610dcf90849061163a565b90915550506001600160a01b0382166000908152600560205260408120805460019290610dfd90849061173b565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610f125760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161034a565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610f8a848484610cc2565b610f9684848484610fe5565b61097a5760405162461bcd60e51b815260040161034a90611753565b610fbc83836110f2565b610fc96000848484610fe5565b6105ff5760405162461bcd60e51b815260040161034a90611753565b60006001600160a01b0384163b156110e757604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110299033908990889088906004016117a5565b602060405180830381600087803b15801561104357600080fd5b505af1925050508015611073575060408051601f3d908101601f19168201909252611070918101906117e2565b60015b6110cd573d8080156110a1576040519150601f19603f3d011682016040523d82523d6000602084013e6110a6565b606091505b5080516110c55760405162461bcd60e51b815260040161034a90611753565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610cba565b506001949350505050565b6001600160a01b0382166111485760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161034a565b6000818152600460205260409020546001600160a01b0316156111ad5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161034a565b6001600160a01b03821660009081526005602052604081208054600192906111d690849061173b565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611240906115e9565b90600052602060002090601f01602090048101928261126257600085556112a8565b82601f1061127b57805160ff19168380011785556112a8565b828001600101855582156112a8579182015b828111156112a857825182559160200191906001019061128d565b506112b49291506112b8565b5090565b5b808211156112b457600081556001016112b9565b6001600160a01b0381168114610aa657600080fd5b6000602082840312156112f457600080fd5b81356112ff816112cd565b9392505050565b6001600160e01b031981168114610aa657600080fd5b60006020828403121561132e57600080fd5b81356112ff81611306565b60005b8381101561135457818101518382015260200161133c565b8381111561097a5750506000910152565b6000815180845261137d816020860160208601611339565b601f01601f19169290920160200192915050565b6020815260006112ff6020830184611365565b6000602082840312156113b657600080fd5b5035919050565b600080604083850312156113d057600080fd5b82356113db816112cd565b946020939093013593505050565b6000806000606084860312156113fe57600080fd5b8335611409816112cd565b92506020840135611419816112cd565b929592945050506040919091013590565b6000806040838503121561143d57600080fd5b8235611448816112cd565b91506020830135801515811461145d57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156114a7576114a7611468565b604052919050565b600067ffffffffffffffff8211156114c9576114c9611468565b50601f01601f191660200190565b600080600080608085870312156114ed57600080fd5b84356114f8816112cd565b93506020850135611508816112cd565b925060408501359150606085013567ffffffffffffffff81111561152b57600080fd5b8501601f8101871361153c57600080fd5b803561154f61154a826114af565b61147e565b81815288602083850101111561156457600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b6000806040838503121561159957600080fd5b82356115a4816112cd565b9150602083013561145d816112cd565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c908216806115fd57607f821691505b6020821081141561161e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561164c5761164c611624565b500390565b60008261166e57634e487b7160e01b600052601260045260246000fd5b500690565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000602082840312156116d657600080fd5b815167ffffffffffffffff8111156116ed57600080fd5b8201601f810184136116fe57600080fd5b805161170c61154a826114af565b81815285602083850101111561172157600080fd5b611732826020830160208601611339565b95945050505050565b6000821982111561174e5761174e611624565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117d890830184611365565b9695505050505050565b6000602082840312156117f457600080fd5b81516112ff8161130656fea2646970667358221220c7f280168e210512adf3c87f41838f72fca85b3d66f26ec97f943887f962160e64736f6c63430008090033";

type QAZTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QAZTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QAZToken__factory extends ContractFactory {
  constructor(...args: QAZTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _descriptor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QAZToken> {
    return super.deploy(_descriptor, overrides || {}) as Promise<QAZToken>;
  }
  override getDeployTransaction(
    _descriptor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_descriptor, overrides || {});
  }
  override attach(address: string): QAZToken {
    return super.attach(address) as QAZToken;
  }
  override connect(signer: Signer): QAZToken__factory {
    return super.connect(signer) as QAZToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QAZTokenInterface {
    return new utils.Interface(_abi) as QAZTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QAZToken {
    return new Contract(address, _abi, signerOrProvider) as QAZToken;
  }
}
