/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTDescriptor,
  NFTDescriptorInterface,
} from "../../../contracts/libs/NFTDescriptor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "attributes",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
        ],
        internalType: "struct NFTDescriptor.TokenURIParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "constructTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61062261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80635b4e74871461003a575b600080fd5b61004d6100483660046102e9565b610063565b60405161005a91906103f2565b60405180910390f35b60606100a3826000015183602001518460400151856060015160405160200161008f9493929190610425565b6040516020818303038152906040526100c9565b6040516020016100b391906104f8565b6040516020818303038152906040529050919050565b60608151600014156100e957505060408051602081019091526000815290565b60006040518060600160405280604081526020016105ad60409139905060006003845160026101189190610553565b610122919061056b565b61012d90600461058d565b67ffffffffffffffff8111156101455761014561021d565b6040519080825280601f01601f19166020018201604052801561016f576020820181803683370190505b509050600182016020820185865187015b808210156101db576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250610180565b50506003865106600181146101f7576002811461020a57610212565b603d6001830353603d6002830353610212565b603d60018303535b509195945050505050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156102565761025661021d565b60405290565b600082601f83011261026d57600080fd5b813567ffffffffffffffff808211156102885761028861021d565b604051601f8301601f19908116603f011681019082821181831017156102b0576102b061021d565b816040528381528660208588010111156102c957600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156102fb57600080fd5b813567ffffffffffffffff8082111561031357600080fd5b908301906080828603121561032757600080fd5b61032f610233565b82358281111561033e57600080fd5b61034a8782860161025c565b82525060208301358281111561035f57600080fd5b61036b8782860161025c565b60208301525060408301358281111561038357600080fd5b61038f8782860161025c565b6040830152506060830135828111156103a757600080fd5b6103b38782860161025c565b60608301525095945050505050565b60005b838110156103dd5781810151838201526020016103c5565b838111156103ec576000848401525b50505050565b60208152600082518060208401526104118160408501602087016103c2565b601f01601f19169190910160400192915050565b683d913730b6b2911d1160b91b8152845160009061044a816009850160208a016103c2565b71111610113232b9b1b934b83a34b7b7111d1160711b600991840191820152855161047c81601b840160208a016103c2565b70222c202261747472696275746573223a5b60781b601b929091019182015284516104ae81602c8401602089016103c2565b6b2e96101134b6b0b3b2911d1160a11b602c929091019182015283516104db8160388401602088016103c2565b61227d60f01b60389290910191820152603a019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161053081601d8501602087016103c2565b91909101601d0192915050565b634e487b7160e01b600052601160045260246000fd5b600082198211156105665761056661053d565b500190565b60008261058857634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156105a7576105a761053d565b50029056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220b44d89d5a0e63528c137aa3873fd309b53eba845edb9575bd75202571d8b4cbb64736f6c63430008090033";

type NFTDescriptorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTDescriptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTDescriptor__factory extends ContractFactory {
  constructor(...args: NFTDescriptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTDescriptor> {
    return super.deploy(overrides || {}) as Promise<NFTDescriptor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTDescriptor {
    return super.attach(address) as NFTDescriptor;
  }
  override connect(signer: Signer): NFTDescriptor__factory {
    return super.connect(signer) as NFTDescriptor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTDescriptorInterface {
    return new utils.Interface(_abi) as NFTDescriptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTDescriptor {
    return new Contract(address, _abi, signerOrProvider) as NFTDescriptor;
  }
}
